<svg id="genevaDrive" width="500" height="350" svg-bind-viewbox="{{viewBox}}" style="border: 1px solid blue;">


    <defs>
        <mask id="gWheelMask">
            <circle ng-attr-cx="{{wheel.x}}"
                ng-attr-cy="{{wheel.y}}"
                ng-attr-r="{{wheel.radius}}"
                fill="white" />

            <g ng-repeat="position in wheel.slotPositionsDegrees"
               ng-attr-transform="rotate({{position}} {{wheel.x}} {{wheel.y}})">

                <rect ng-attr-x="{{wheel.x + wheel.radius - wheel.slotDepth - (wheel.slotWidth/2)}}"
                      ng-attr-y="{{wheel.y - (wheel.slotWidth / 2)}}"
                      ng-attr-width="{{wheel.slotDepth + (2 * wheel.slotWidth)}}"
                      ng-attr-height="{{wheel.slotWidth}}"
                      ng-attr-rx="{{(wheel.slotWidth / 2)}}"
                      ng-attr-ry="{{(wheel.slotWidth / 2)}}"
                      fill="black" />

                <circle ng-attr-cx="{{wheel.x + wheel.stopDiscCutout.distanceFromCenter}}"
                        ng-attr-cy="{{wheel.y}}"
                        ng-attr-r="{{wheel.stopDiscCutout.radius}}"
                        ng-attr-transform="rotate({{180 / wheel.slotQty}} {{wheel.x}} {{wheel.y}})" />

            </g>
        </mask>

        <mask id="stopDiscMask">
            <circle ng-attr-cx="{{drive.x}}"
                ng-attr-cy="{{drive.y}}"
                ng-attr-r="{{drive.stopDisc.radius}}"
                fill="white" />
            <circle ng-attr-cx="{{drive.x - drive.stopDisc.radius}}"
                ng-attr-cy="{{drive.y - drive.stopDisc.clearanceRadius}}"
                ng-attr-r="{{drive.stopDisc.clearanceRadius}}"
                fill="black" />
        </mask>
    </defs>
    
    <g id="gDrive"
       ng-attr-transform="rotate({{drive.spinAngle}} {{drive.x}} {{drive.y}})">

        <circle id="base"
                ng-attr-cx="{{drive.x}}"
                ng-attr-cy="{{drive.y}}"
                ng-attr-r="{{drive.radius}}"/>

        <circle id="stopDisc"
                ng-attr-cx="{{drive.x}}"
                ng-attr-cy="{{drive.y}}"
                ng-attr-r="{{drive.stopDisc.radius}}"
                mask="url(#stopDiscMask)"
                fill="red" />

        <circle id="pin"
                ng-attr-cx="{{drive.x + drive.pin.distance}}"
                ng-attr-cy="{{drive.y}}"
                ng-attr-r="{{drive.pin.radius}}"
                ng-attr-transform="rotate({{drive.pin.startPositionDegrees}} {{drive.x}} {{drive.y}})"
                fill="red" />
    </g>

    <g id="gWheel"
        ng-attr-transform="rotate({{wheel.rotationDegrees()}} {{wheel.x}} {{wheel.y}})">

        <circle ng-attr-cx="{{wheel.x}}"
            ng-attr-cy="{{wheel.y}}"
            ng-attr-r="{{wheel.radius}}"
            mask="url(#gWheelMask)"
            fill="blue"/>
    </g>

    <g id="dimensions" ng-attr-display="{{dimensions.display ? '' : 'none'}}">
        
        <rect ng-attr-x="{{-100 * wheel.radius}}"
            ng-attr-y="{{-100 * wheel.radius}}"
            ng-attr-width="{{200 * wheel.radius}}"
            ng-attr-height="{{200 * wheel.radius}}"
            fill="white" fill-opacity="0.4" />

        <path ng-attr-d="M {{dims.vzTriangle.p1.x}} {{dims.vzTriangle.p1.y}}
            L {{dims.vzTriangle.p2.x}} {{dims.vzTriangle.p2.y}}
            L {{dims.vzTriangle.p3.x}} {{dims.vzTriangle.p3.y}} Z"
            fill="transparent" stroke="gray" stroke-width="{{drive.pin.radius / 2}}" />

        <path ng-attr-d="M {{dims.abcTriangle.p1.x}} {{dims.abcTriangle.p1.y}}
            L {{dims.abcTriangle.p2.x}} {{dims.abcTriangle.p2.y}}
            L {{dims.abcTriangle.p3.x}} {{dims.abcTriangle.p3.y}} Z"
            fill="transparent" stroke="white" stroke-width="{{drive.pin.radius / 2}}" />

        <drawing-dimension
            p1x="dims.abcTriangle.p1.x" p1y="dims.abcTriangle.p1.y"
            p2x="dims.abcTriangle.p2.x" p2y="dims.abcTriangle.p2.y"
            text="'c'"
            leader="wheel.radius" line-width="(drive.pin.radius / 4)" font-size="(drive.pin.radius * 1.5)" />

        <drawing-dimension
            p1x="dims.abcTriangle.p2.x" p1y="dims.abcTriangle.p2.y"
            p2x="dims.abcTriangle.p3.x" p2y="dims.abcTriangle.p3.y"
            text="'a'"
            leader="drive.radius" line-width="(drive.pin.radius / 4)" font-size="(drive.pin.radius * 1.5)" />

        <drawing-dimension
            p1x="dims.abcTriangle.p3.x" p1y="dims.abcTriangle.p3.y"
            p2x="dims.abcTriangle.p1.x" p2y="dims.abcTriangle.p1.y"
            text="'b'"
            leader="(wheel.radius / 2)" line-width="(drive.pin.radius / 4)" font-size="(drive.pin.radius * 1.5)" />

    </g>

</svg>